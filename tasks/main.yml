# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: Include debian/ubuntu tasks
  include: debian.yml
  when: ansible_os_family == 'Debian'

- name: Include centos/rhel tasks
  include: redhat.yml
  when: ansible_os_family == 'RedHat'

- name: Install docker-engine package
  package:
    name: docker-engine
    state: present
  become: true

- name: Create plugins directory
  file:
    path: /etc/docker/plugins
    state: directory
    owner: root
    group: root
    mode: 0755
  become: true

- name: Create systemd overlay directory
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    owner: root
    group: root
    mode: 0755
  become: true

- name: Copy systemd overlay file
  template:
    src: overlay.conf.j2
    dest: /etc/systemd/system/docker.service.d/overlay.conf
    owner: root
    group: root
    mode: 0644
  notify: Restart docker service
  become: true

- name: Copy limits configuration file
  copy:
    src: limits.conf
    dest: /etc/security/limits.d/docker.conf
    owner: root
    group: root
    mode: 0644
  become: true

- name: Copy daemon.json configuration file
  copy:
    src: daemon.json
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0644
  notify: Restart docker service
  become: true

- meta: flush_handlers

- name: Start/Enable service
  service:
    name: docker
    state: started
    enabled: yes
  become: true

- name: Start/Enable docker socket service
  service:
    name: docker.socket
    state: started
    enabled: yes
  when: ansible_os_family == 'Debian'
  become: true

- name: Include ufw tasks
  include: ufw.yml
  when: ansible_os_family == 'Debian'

- name: Add operator user to docker group
  user:
    name: "{{ docker_operator_user }}"
    groups: docker
    append: yes
  when: docker_operator_user != ""
  become: true

- name: Log into private registry and force re-authorization
  docker_login:
    registry: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
    reauthorize: yes
  when:
    - docker_operator_user != ""
    - docker_registry_username|default("") != ""
    - docker_registry_password|default("") != ""
  become: false
  connection: paramiko

- name: Log into private registry and force re-authorization
  docker_login:
    registry: "{{ docker_registry }}"
    username: "{{ docker_registry_username }}"
    password: "{{ docker_registry_password }}"
    reauthorize: yes
  when:
    - docker_registry_username|default("") != ""
    - docker_registry_password|default("") != ""
  become: true
  connection: paramiko

- name: Ensure docker is working like expected
  include: test.yml
  when: docker_run_tests|bool

- name: Include cadvisor tasks
  include: cadvisor.yml
  when: docker_run_cadvisor|bool
